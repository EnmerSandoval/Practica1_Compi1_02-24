/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.practice1.View;

import org.practice1.Objects.Panels.*;
import org.practice1.Objects.*;
import org.practice1.Objects.Polygon;
import org.practice1.Objects.Rectangle;
import org.practice1.Stats.StatsColor;
import org.practice1.Stats.StatsFigure;
import org.practice1.Stats.StatsMath;

import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;

/**
 *
 * @author laptop
 */
public class Graphics extends javax.swing.JFrame {

    private String filePath = "";
    private String text = "";
    private ArrayList<Figure> figures = new ArrayList<>();
    private ArrayList<StatsMath> statsMaths = new ArrayList<>();
    private StatsColor statsColor = new StatsColor();
    private StatsFigure statsFigure = new StatsFigure();

    public Graphics() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Graficas");
    }

    public Graphics(ArrayList<Figure> figures, ArrayList<StatsMath> statsMaths, StatsColor statsColor, StatsFigure statsFigure, String filePath) {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Graficas");
        this.figures = figures;
        this.statsMaths = statsMaths;
        this.statsColor = statsColor;
        this.statsFigure = statsFigure;
        this.filePath = filePath;
        graphicsFigures(figures);
    }

    private void graphicsFigures(ArrayList<Figure> figures){
        marco.removeAll();
        marco.setLayout(new GridLayout(0, figures.size()));

        for (int i = 0; i < figures.size(); i++) {
            JPanel panelFigure = null;
            if(figures.get(i) instanceof Square){
                panelFigure = new PanelSquare((Square) figures.get(i));
            } else if(figures.get(i) instanceof Circle){
                panelFigure = new PanelCircle((Circle) figures.get(i));
            } else if(figures.get(i) instanceof Line){
                panelFigure = new PanelLine((Line) figures.get(i));
            } else if(figures.get(i) instanceof Polygon) {
                panelFigure = new PanelPolygon((Polygon) figures.get(i));
            } else if(figures.get(i) instanceof Rectangle){
                panelFigure = new PanelRectangle((Rectangle) figures.get(i));
            }
            if (panelFigure != null) {
                marco.add(panelFigure);
            }
        }
        marco.revalidate();
        marco.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        marco = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout marcoLayout = new javax.swing.GroupLayout(marco);
        marco.setLayout(marcoLayout);
        marcoLayout.setHorizontalGroup(
            marcoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 850, Short.MAX_VALUE)
        );
        marcoLayout.setVerticalGroup(
            marcoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 680, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(marco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(marco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Graphics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Graphics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Graphics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Graphics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Graphics().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel marco;
    // End of variables declaration//GEN-END:variables
}
